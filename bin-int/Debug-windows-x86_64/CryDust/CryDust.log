  OpenGLContext.cpp
D:\Project\Git Project\CryDust\CryDust\vendor\spdlog\include\spdlog\fmt\bundled\base.h(1635,17): error C2338: static_assert failed: 'Formatting of non-void pointers is disallowed.'
D:\Project\Git Project\CryDust\CryDust\vendor\spdlog\include\spdlog\fmt\bundled\base.h(2017,61): message : 查看对正在编译的函数 模板 实例化“fmt::v11::detail::value<Context> fmt::v11::detail::make_arg<true,Context,_Ty,0>(T &)”的引用
          with
          [
              Context=fmt::v11::context,
              _Ty=const GLubyte *,
              T=const GLubyte *
          ]
D:\Project\Git Project\CryDust\CryDust\vendor\spdlog\include\spdlog\logger.h(317,89): message : 查看对正在编译的函数 模板 实例化“fmt::v11::detail::format_arg_store<fmt::v11::format_context,1,0,15> fmt::v11::make_format_args<fmt::v11::format_context,_Ty,1,0,15,0>(_Ty &)”的引用
          with
          [
              _Ty=const GLubyte *
          ]
D:\Project\Git Project\CryDust\CryDust\vendor\spdlog\include\spdlog\logger.h(79,99): message : 查看对正在编译的函数 模板 实例化“void spdlog::logger::log_<_Ty>(spdlog::source_loc,spdlog::level::level_enum,spdlog::string_view_t,_Ty &&)”的引用
          with
          [
              _Ty=const GLubyte *
          ]
D:\Project\Git Project\CryDust\CryDust\vendor\spdlog\include\spdlog\logger.h(84,83): message : 查看对正在编译的函数 模板 实例化“void spdlog::logger::log<_Ty>(spdlog::source_loc,spdlog::level::level_enum,fmt::v11::basic_format_string<char,const GLubyte *>,_Ty &&)”的引用
          with
          [
              _Ty=const GLubyte *
          ]
D:\Project\Git Project\CryDust\CryDust\vendor\spdlog\include\spdlog\logger.h(139,61): message : 查看对正在编译的函数 模板 实例化“void spdlog::logger::log<_Ty>(spdlog::level::level_enum,fmt::v11::basic_format_string<char,const GLubyte *>,_Ty &&)”的引用
          with
          [
              _Ty=const GLubyte *
          ]
D:\Project\Git Project\CryDust\CryDust\src\Platform\OpenGL\OpenGLContext.cpp(19,3): message : 查看对正在编译的函数 模板 实例化“void spdlog::logger::info<const GLubyte*>(fmt::v11::basic_format_string<char,const GLubyte *>,const GLubyte *&&)”的引用
